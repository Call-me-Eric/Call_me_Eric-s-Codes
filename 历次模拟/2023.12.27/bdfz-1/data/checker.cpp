#include<bits/stdc++.h>
#include"testlib_for_lemons.h"
using namespace std;

const long double eps=LDBL_EPSILON*1e8;
const long double pi2=6.283185307179586476925286766559005768394338798750211641949889184615632812572417997256069650684234136L;

mt19937 rng(chrono::steady_clock().now().time_since_epoch().count());
template<typename t> t rndi(t l,t r){return uniform_int_distribution<t>(l,r)(rng);}

int check(InStream&s,int n,int k){
    string c=s.readString("[01]+");
    if(c.length()!=n)return -1;
    int f=0;for(auto&u:c)f+=u=='1';
    if(f>k)return -1;
    long double tx=0,ty=0;
    for(int i=0;i<n;i++){
        if(c[i]=='1'){
            tx+=cosl(pi2*i/n);
            ty+=sinl(pi2*i/n);
        }
    }
    if(abs(tx)>eps||abs(ty)>eps)return -1;
    vector<int> zp;int cn=n;
    int vphi=n;
    for(int i=2;i<=n;i++){
        if(cn%i==0){
            vphi/=i;vphi*=i-1;
            zp.push_back(i);while(cn%i==0)cn/=i;
        }
    }
    int deg=n-1-vphi;
    for(int p:{919394449,992567099,913401119,984329179,928456951,960378347,904915871,948400213,937724159,905041289,970895767,926851063,949927291,952113073,929647249,955012337,982208893,978738427,957593321,921084797,936990013,931048819,965044517,991069799,950765657,954484151,964997879,927557003,923652577,927862543,961224419,907986799,931629319,961166083,993800287,976013611,996014099,982763501}){//random primes generated by MMA
#define normH(x) (x-=(x>=p?p:0))
#define normL(x) (x+=(x<0?p:0))
        vector<int> v0(n);
        for(int i=0;i<n;i++)v0[i]=c[i]=='1';
        for(int s=0;s<(1<<zp.size());s++){
            int cnt=0;
            int w=n;
            for(int j=0;j<zp.size();j++){
                if((s>>j)&1){
                    cnt++;
                    w/=zp[j];
                }
            }
            if(cnt&1){
                for(int i=n-1;i>=w;i--){
                    v0[i]=v0[i-w]-v0[i];
                    normL(v0[i]);
                }
                for(int i=0;i<w;i++)v0[i]=p-v0[i],normH(v0[i]);
            }else{
                for(int i=0;i<w;i++)v0[i]=p-v0[i],normH(v0[i]);
                for(int i=w;i<n;i++){
                    v0[i]=v0[i-w]-v0[i];
                    normL(v0[i]);
                }
            }
        }
        for(int i=deg+1;i<n;i++)if(v0[i]!=0)return -1;
    }
    return f;
}

int main(int argc,char**argv){
    registerLemonChecker(argc,argv);
    int n=inf.readInt();
    int k=inf.readInt();
    int st=check(ouf,n,k);
    int a=ans.readInt();
    if(a!=st)quit(_wa,"wa");
    else quit(_ok,"ok");
    return 0;
}
